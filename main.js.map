{"version":3,"file":"main.js","mappings":";;AAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB,EAAE,SAAS,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,4CAA4C,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://webpack-template/./src/index.js"],"sourcesContent":["import \"./style.css\";\r\n\r\n(function setupFormvalidation() {\r\n  const form = document.querySelector(\"form\");\r\n  const emailInput = document.querySelector(\"#email\");\r\n  const countryInput = document.querySelector(\"#country\");\r\n  const postalCodeInput = document.querySelector(\"#postal-code\");\r\n  const passwordInput = document.querySelector(\"#password\");\r\n  const passwordConfirmationInput = document.querySelector(\r\n    \"#password-confirmation\",\r\n  );\r\n\r\n  function validateEmailInput() {\r\n    const emailValidationLabel = document.querySelector(\r\n      \".email-validation-result\",\r\n    );\r\n    emailValidationLabel.textContent = \"\";\r\n\r\n    if (emailInput.validity.valueMissing) {\r\n      emailValidationLabel.textContent = \"Please provide a email.\";\r\n      return false;\r\n    } else if (emailInput.validity.typeMismatch) {\r\n      emailValidationLabel.textContent =\r\n        \"Please provide a valid email address.\";\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validateCountry() {\r\n    const countryValidationLabel = document.querySelector(\r\n      \".country-validation-result\",\r\n    );\r\n\r\n    countryValidationLabel.textContent = \"\";\r\n\r\n    if (countryInput.validity.valueMissing) {\r\n      countryValidationLabel.textContent = \"Please provide a country.\";\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validatePostalCode() {\r\n    const postalCodeValidationLabel = document.querySelector(\r\n      \".postal-code-validation-result\",\r\n    );\r\n\r\n    postalCodeValidationLabel.textContent = \"\";\r\n\r\n    if (postalCodeInput.validity.valueMissing) {\r\n      postalCodeValidationLabel.textContent = \"Please provide a postal code.\";\r\n      return false;\r\n    } else if (!/^[a-zA-Z]\\d{4}[a-zA-Z]{3}$/.test(postalCodeInput.value)) {\r\n      postalCodeValidationLabel.textContent =\r\n        \"Invalid postal code format, please read indications.\";\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validatePassword() {\r\n    const passwordValidationLabel = document.querySelector(\r\n      \".password-validation-result\",\r\n    );\r\n\r\n    passwordValidationLabel.textContent = \"\";\r\n\r\n    if (passwordInput.validity.valueMissing) {\r\n      passwordValidationLabel.textContent =\r\n        \"A password is required for registration.\";\r\n      return false;\r\n    } else if (\r\n      !/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?\\d).{8,20}$/.test(passwordInput.value)\r\n    ) {\r\n      passwordValidationLabel.textContent =\r\n        \"Password does not meet the requirements.\";\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function updatePasswordRequirements() {\r\n    const lengthIndicator = document.querySelector(\".password-length\");\r\n    const lowercaseIndicator = document.querySelector(\".password-lowercase\");\r\n    const uppercaseIndicator = document.querySelector(\".password-uppercase\");\r\n    const numberIndicator = document.querySelector(\".password-number\");\r\n    let isValid = true;\r\n\r\n    lengthIndicator.classList.remove(\"invalid\", \"valid\");\r\n    lowercaseIndicator.classList.remove(\"invalid\", \"valid\");\r\n    uppercaseIndicator.classList.remove(\"invalid\", \"valid\");\r\n    numberIndicator.classList.remove(\"invalid\", \"valid\");\r\n\r\n    if (/.{8,20}/.test(passwordInput.value)) {\r\n      lengthIndicator.classList.add(\"valid\");\r\n    } else {\r\n      lengthIndicator.classList.add(\"invalid\");\r\n      isValid = false;\r\n    }\r\n    if (/(?=.*?[a-z])/.test(passwordInput.value)) {\r\n      lowercaseIndicator.classList.add(\"valid\");\r\n    } else {\r\n      lowercaseIndicator.classList.add(\"invalid\");\r\n      isValid = false;\r\n    }\r\n    if (/(?=.*?[A-Z])/.test(passwordInput.value)) {\r\n      uppercaseIndicator.classList.add(\"valid\");\r\n    } else {\r\n      uppercaseIndicator.classList.add(\"invalid\");\r\n      isValid = false;\r\n    }\r\n    if (/(?=.*?\\d)/.test(passwordInput.value)) {\r\n      numberIndicator.classList.add(\"valid\");\r\n    } else {\r\n      numberIndicator.classList.add(\"invalid\");\r\n      isValid = false;\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  function validatePasswordConfirmation() {\r\n    const passwordConfirmationValidationLabel = document.querySelector(\r\n      \".password-confirmation-validation-result\",\r\n    );\r\n\r\n    passwordConfirmationValidationLabel.textContent = \"\";\r\n\r\n    if (passwordConfirmationInput.validity.valueMissing) {\r\n      passwordConfirmationValidationLabel.textContent =\r\n        \"A password confirmation is required for registration.\";\r\n      return false;\r\n    } else if (passwordConfirmationInput.value !== passwordInput.value) {\r\n      passwordConfirmationValidationLabel.textContent =\r\n        \"Passwords do not match.\";\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function clearValidationResult(event) {\r\n    const validationResult = event.target.nextElementSibling;\r\n    validationResult.textContent = \"\";\r\n  }\r\n\r\n  function setupInputValidation(input, validator) {\r\n    input.addEventListener(\"input\", clearValidationResult);\r\n    input.addEventListener(\"focusout\", validator);\r\n  }\r\n\r\n  function validateForm(event) {\r\n    event.preventDefault();\r\n    if (!validateEmailInput()) {\r\n      emailInput.focus();\r\n      return;\r\n    }\r\n    if (!validateCountry()) {\r\n      countryInput.focus();\r\n      return;\r\n    }\r\n    if (!validatePostalCode()) {\r\n      postalCodeInput.focus();\r\n      return;\r\n    }\r\n    if (!validatePassword()) {\r\n      passwordInput.focus();\r\n      return;\r\n    }\r\n    if (!validatePasswordConfirmation()) {\r\n      passwordConfirmationInput.focus();\r\n      return;\r\n    }\r\n\r\n    alert(\"Registration successful!\");\r\n  }\r\n\r\n  setupInputValidation(emailInput, validateEmailInput);\r\n  setupInputValidation(countryInput, validateCountry);\r\n  setupInputValidation(postalCodeInput, validatePostalCode);\r\n  setupInputValidation(passwordInput, validatePassword);\r\n  passwordInput.addEventListener(\"input\", updatePasswordRequirements);\r\n  setupInputValidation(passwordConfirmationInput, validatePasswordConfirmation);\r\n\r\n  form.addEventListener(\"submit\", validateForm);\r\n})();\r\n"],"names":[],"sourceRoot":""}